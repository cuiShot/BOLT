
You must output the following three parts:
(1) Output the weight for each model. A model's weight may be 0, and the sum of all weights must be 1.00.
(2) Briefly explain the reason for each model's weight.
(3) On the last line, output a weight list alone, in the format: Final model weight list: [0.13, 0.22, 0.00, 0.33, 0.32]
The last line will be parsed automatically by the program, so strictly follow this format.


Model list:
Model 1:
- Validation set performance: Accuracy=89.32, AUC=82.05,
Model 2:
- Validation set performance: Accuracy=91.03, AUC=82.24,
Model 3:
- Validation set performance: Accuracy=90.29, AUC=83.43,
Model 4:
- Validation set performance: Accuracy=90.82, AUC=82.83,
Model 5:
- Validation set performance: Accuracy=90.82, AUC=83.92,

The Jaccard-Fault differences on an independent validation set are shown in the matrix below. Each element [i][j] denotes the Jaccard similarity between the error sets of model i and model j on the validation set; a smaller value indicates less overlap in their errors and thus stronger complementarity.
The model order in the matrix follows the list above (Model 1, Model 2, ...), and the matrix is 1-indexed to match the model numbering.
The Jaccard-Fault matrix is as follows (unit: proportion, rounded to two decimal places):
[
 [1.0000, 0.8125, 0.7551, 0.8333, 0.8163],
 [0.8125, 1.0000, 0.8864, 0.9767, 0.9545],
 [0.7551, 0.8864, 1.0000, 0.9091, 0.9318],
 [0.8333, 0.9767, 0.9091, 1.0000, 0.9773],
 [0.8163, 0.9545, 0.9318, 0.9773, 1.0000]
]


single-shot example:
{
Model List:
Model 1:
- Validation Set Performance: Accuracy = 79.14, AUC = 82.14
Model 2:
- Validation Set Performance: Accuracy = 77.54, AUC = 82.32
Model 3:
- Validation Set Performance: Accuracy = 75.40, AUC = 80.84
Model 4:
- Validation Set Performance: Accuracy = 78.60, AUC = 81.28
Model 5:
- Validation Set Performance: Accuracy = 75.40, AUC = 79.12

Jaccard-Fault matrix
The Jaccard-Fault matrix is as follows (unit: proportion in [0,1], rounded to four decimals):
[
 [1.0000, 0.9286, 0.9107, 0.8947, 0.8500],
 [0.9286, 1.0000, 0.8814, 0.8966, 0.8333],
 [0.9107, 0.8814, 1.0000, 0.9138, 0.7742],
 [0.8947, 0.8966, 0.9138, 1.0000, 0.8167],
 [0.8500, 0.8333, 0.7742, 0.8167, 1.0000]
]


Model Output (Recommended Optimal Weight Vector):
Model 1: Weight = 0.1600
Model 2: Weight = 0.1770
Model 3: Weight = 0.2000
Model 4: Weight = 0.1830
Model 5: Weight = 0.2800

Reasoning for Weight Assignment (classification task):

- Model 1: Highest Accuracy (79.14) and strong AUC (82.14). High Jaccard-Fault (~0.896) but superior standalone performance justifies weight.
- Model 2: Best AUC (82.32), moderate Accuracy (77.54). High Jaccard-Fault (~0.885) but AUC leadership warrants weight.
- Model 4: Solid AUC (81.28) and Accuracy (78.60), mid-high Jaccard-Fault (~0.880). Reliable contributor.
- Model 3: Lower performance but more complementary errors (avg JF ~0.870). Small-moderate weight for diversity.
- Model 5: Lowest individual performance but most complementary (avg JF ~0.819). Small weight to inject diversity while limiting downside.


Final model weight list: [0.1600, 0.1770, 0.2000, 0.1830, 0.2800]
}



IMPORTANT: The last line of your output must exactly match the format of the last line in the single-shot example!
IMPORTANT:If the model weight is 0, you must also output it, and you must ensure that the dimension of the obtained weight vector is consistent with the number of models!
